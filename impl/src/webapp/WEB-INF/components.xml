<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright (c) 2017, University of Dayton
  ~
  ~  Licensed under the Educational Community License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~              http://opensource.org/licenses/ecl2
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!--  SakaiProxy -->
 	<bean id="org.sakaiproject.attendance.logic.SakaiProxy"
    	class="org.sakaiproject.attendance.logic.SakaiProxyImpl"
        init-method="init">

        <!-- API injection -->
        <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService" />
        <property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
        <property name="toolManager" ref="org.sakaiproject.tool.api.ToolManager" />
        <property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService" />
		<property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService" />
		<property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />
		<property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
		<property name="preferencesService" ref="org.sakaiproject.user.api.PreferencesService" />
		<property name="authzGroupService" ref="org.sakaiproject.authz.api.AuthzGroupService" />

	</bean>

    <!-- DAO uses the Sakai-managed DataSource via the global SessionFactory -->

	<!-- Enable @Transactional annotations at the service layer -->
	<!-- Use JDK proxies (default) to avoid forcing CGLIB across the shared context -->
	<tx:annotation-driven transaction-manager="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />

	<!-- Attendance Data Access Object (no transaction proxy; transactions are managed in services) -->
	<bean id="org.sakaiproject.attendance.dao.AttendanceDao"
		  class="org.sakaiproject.attendance.dao.impl.AttendanceDaoImpl"
		  init-method="init">
		<property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
	</bean>

	<!-- AttendanceLogic -->
	<bean id="org.sakaiproject.attendance.logic.AttendanceLogic"
		  class="org.sakaiproject.attendance.logic.AttendanceLogicImpl"
		  init-method="init">

		<property name="dao" ref="org.sakaiproject.attendance.dao.AttendanceDao" />
		<property name="sakaiProxy" ref="org.sakaiproject.attendance.logic.SakaiProxy" />
		<property name="attendanceGradebookProvider" ref="org.sakaiproject.attendance.api.AttendanceGradebookProvider" />
		<property name="entityManager" ref="org.sakaiproject.entity.api.EntityManager" />
	</bean>

	<!-- PDFEventExporter -->
	<bean id="org.sakaiproject.attendance.export.PDFEventExporter"
		  class="org.sakaiproject.attendance.export.PDFEventExporterImpl"
		  init-method="init">

		<property name="attendanceLogic" ref="org.sakaiproject.attendance.logic.AttendanceLogic" />
		<property name="sakaiProxy" ref="org.sakaiproject.attendance.logic.SakaiProxy" />

	</bean>

	<!-- AttendanceGradebookProvider -->
	<bean id="org.sakaiproject.attendance.api.AttendanceGradebookProvider"
		  class="org.sakaiproject.attendance.impl.AttendanceGradebookProviderImpl"
		  init-method="init">

		<property name="attendanceLogic" ref="org.sakaiproject.attendance.logic.AttendanceLogic" />
		<property name="sakaiProxy" ref="org.sakaiproject.attendance.logic.SakaiProxy" />
		<property name="toolManager" ref="org.sakaiproject.tool.api.ToolManager" />
		<property name="gradingService" ref="org.sakaiproject.grading.api.GradingService" />
	</bean>

  <!-- Add our annotated classes to the Sakai global session factory -->
  <bean id="org.sakaiproject.attendance.annotated.MappingList"
      class="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl">

    <property name="annotatedClasses">
      <list>
        <value>org.sakaiproject.attendance.model.GradingRule</value>
        <value>org.sakaiproject.attendance.model.AttendanceEvent</value>
        <value>org.sakaiproject.attendance.model.AttendanceGrade</value>
        <value>org.sakaiproject.attendance.model.AttendanceItemStats</value>
        <value>org.sakaiproject.attendance.model.AttendanceRecord</value>
        <value>org.sakaiproject.attendance.model.AttendanceSite</value>
        <value>org.sakaiproject.attendance.model.AttendanceStatus</value>
        <value>org.sakaiproject.attendance.model.AttendanceUserStats</value>
      </list>
    </property>
  </bean>

	<!-- HBM mappings removed: entities now use JPA annotations -->

	<!-- Cache: ttl=1 hour -->
	<bean id="org.sakaiproject.attendance.cache.CacheManager"
		  class="org.sakaiproject.attendance.cache.CacheManagerImpl">
		<property name="memoryService" ref="org.sakaiproject.memory.api.MemoryService" />
	</bean>

	<!-- Job to Sync the Statistics -->
	<bean id="AttendanceStatCalc"
		  class="org.sakaiproject.attendance.services.AttendanceStatCalcJob"
		  init-method="init" destroy-method="destroy">
		<property name="attendanceStatCalc" ref="org.sakaiproject.attendance.services.AttendanceStatCalc" />
		<property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService" />
		<property name="usageSessionService" ref="org.sakaiproject.event.api.UsageSessionService" />
		<property name="authzGroupService" ref="org.sakaiproject.authz.api.AuthzGroupService" />
		<property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager" />
	</bean>

	<bean id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.AttendanceStatCalc"
		  class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
		  init-method="init">
		<property name="beanId" value="AttendanceStatCalc" />
		<property name="jobName" value="Attendance Stat Calc - SEE DOCS" />
		<property name="schedulerManager" 	ref="org.sakaiproject.api.app.scheduler.SchedulerManager" />
	</bean>

	<bean id="org.sakaiproject.attendance.services.AttendanceStatCalc"
		  class="org.sakaiproject.attendance.services.AttendanceStatCalc"
		  init-method="init" destroy-method="destroy">
		<property name="dao" ref="org.sakaiproject.attendance.dao.AttendanceDao" />
		<property name="sakaiProxy" ref="org.sakaiproject.attendance.logic.SakaiProxy" />
		<property name="attendanceLogic" ref="org.sakaiproject.attendance.logic.AttendanceLogic" />
		<property name="transactionManager" ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
	</bean>
</beans>
